{   "title": "taskSettings.json schema",
    "type": "object",

    "definitions": {
        "fileDescr": {"type": "object",
            "description": "Description of a file, either by path or by content. If none of them is specified, the file will be searched for in libraries generated by the current task.",
            "properties": {
                "name": {"$ref": "#/definitions/filename", "description": "Filename."},
                "path": {"type": "string", "description": "Path of the file to retrieve."},
                "content": {"type": "string", "description": "Content of the file to save."}},
            "required": ["name"]},

        "compilationDescr": {"type": "object",
            "description": "Description of the files required to compile a program.",
            "properties": {
                "language": {"type": "string", "description": "Language of the program. Possible values: 'ada', 'c', 'cpp', 'cpp11', 'ml', 'ocaml', 'java', 'javascool', 'js', 'sh', 'shell', 'pascal', 'php'', 'py', 'py2', 'py3', 'python', 'python2', 'python3'."},
                "files": {"type": "array", "description": "List of source files.", "items": {"$ref": "#/definitions/fileDescr"}},
                "dependencies": {"type": "array", "description": "List of dependencies.", "items": {"$ref": "#/definitions/fileDescr"}}},
            "required": ["language", "files", "dependencies"]},

        "executionParams": {"type": "object",
            "description": "Parameters of an execution.",
            "properties": {
                "timeLimitMs": {"type": "integer", "description": "Time limit in milliseconds."},
                "memoryLimitKb": {"type": "integer", "description": "Memory limit in kilobytes."},
                "useCache": {"type": "boolean", "description": "Use taskgrader's cached items."},
                "executionArgs": {"type": "string", "description": "Command-line arguments for the execution of the program."},
                "forceStatic": {"type": "boolean", "description": "If present, force static or non-static compilation."},
                "continueOnError": {"type": "boolean", "description": "Consider errors as non-fatal."},
                "stdoutTruncateKb": {"type": "integer", "description": "Size in kilobytes to capture from stdout, -1 means no limit."},
                "stderrTruncateKb": {"type": "integer", "description": "Size in kilobytes to capture from stderr, -1 means no limit."},
                "addFiles": {"type": "array", "description": "Files to add to the execution folder.", "items": {"$ref": "#/definitions/fileDescr"}},
                "getFiles": {"type": "array", "description": "Files to capture in the report.", "items": {"$ref": "#/definitions/filename"}}},
            "required": ["timeLimitMs", "memoryLimitKb", "useCache", "stdoutTruncateKb", "stderrTruncateKb", "getFiles"]},

        "compileAndRunParams": {"type": "object",
            "description": "Parameters for a compilation and an execution.",
            "properties": {
                "compilationDescr": {"$ref": "#/definitions/compilationDescr"},
                "compilationExecution": {"$ref": "#/definitions/executionParams"},
                "runExecution": {"$ref": "#/definitions/executionParams"}},
            "required": ["compilationDescr", "compilationExecution", "runExecution"]},

        "filename": {"type": "string",
            "description": "A valid file name.",
            "pattern": "^\\w[\\w.~/-]+$"}},


    "properties": {
        "generator": {"type": "string",
            "description": "Path to the generator, relative to the task folder."},
        "sanitizer": {"type": "string",
            "description": "Path to the sanitizer, relative to the task folder."},
        "checker": {"type": "string",
            "description": "Path to the checker, relative to the task folder."},

        "sanitizerLang": {"type": "string",
            "description": "Language of the sanitizer."},
        "checkerLang": {"type": "string",
            "description": "Language of the checker."},

        "generatorDeps": {"type": "array",
            "description": "List of dependencies for the generator.",
            "items": {"$ref": "#/definitions/fileDescr"}},
        "sanitizerDeps": {"type": "array",
            "description": "List of dependencies for the sanitizer.",
            "items": {"$ref": "#/definitions/fileDescr"}},
        "checkerDeps": {"type": "array",
            "description": "List of dependencies for the checker.",
            "items": {"$ref": "#/definitions/fileDescr"}},

        "extraDir": {"type": "string",
            "description": "Path to scan for \"extraFiles\", such as test files or libraries which aren't generated. Default is \"tests/files/\"."},

        "ignoreTests": {"type": "array",
            "description": "List of glob-style filenames to ignore while scanning for test cases. These test cases will be ignored by genJson, and thus not used for evaluation.",
            "items": {"type": "string", "description": "Glob-style filename to ignore."}},

        "correctSolutions": {"type": "array",
            "description": "List of \"correct solutions\", which are solutions which will be automatically evaluated against the task and checked for consistency against an expected grade.",
            "items": {"type": "object",
                "description": "A correct solution.",
                "properties": {
                    "path": {"type": "string", "description": "Full path to the solution."},
                    "language": {"type": "string", "description": "Language of the solution."},
                    "grade": {"oneOf": [{"type": "integer"}, {"type": "array", "items": {"type": "integer"}}], "description": "Expected average grade or list of grades."},
                    "nbtests": {"type": "integer", "description": "Number of test cases this solution is expected to be evaluated against."}
                    },
                "required": ["path"]}},

        "overrideParams": {"type": "object",
            "description": "Paramters to override in the generated \"defaultParams.json\" file. The keys of this object will be copied as-is to the file."},

        "defaultGenerators": {"type": "array",
            "description": "List of generators to compile. Will override automatic detection. Recommended only for advanced users.",
            "items": {"type": "object",
                "description": "Generator, generates tests and libraries to be used for evaluation.",
                "properties": {
                    "id": {"type": "string", "description": "Name of the generator."},
                    "compilationDescr": {"$ref": "#/definitions/compilationDescr"},
                    "compilationExecution": {"$ref": "#/definitions/executionParams"}},
                "required": ["id", "compilationDescr", "compilationExecution"]}},

        "defaultGenerations": {"type": "array",
            "description": "List of generations (executions of generators). Will override automatic detection. Recommended only for advanced users.",
            "items": {"type": "object",
                "description": "Generation (execution of a generator).",
                "properties": {
                    "id": {"type": "string", "description": "Name of the generation."},
                    "idGenerator": {"type": "string", "description": "Name of the tests and libraries generator."},
                    "idOutputGenerator": {"type": "string", "description": "Name of the results generator, if applicable."},
                    "genExecution": {"$ref": "#/definitions/executionParams"},
                    "outGenExecution": {"$ref": "#/definitions/executionParams"},
                    "testCases": {"type": "array", "description": "List of specific test cases to generate.",
                        "items": {"type": "object", "properties": {
                            "name": {"$ref": "#/definitions/filename", "description": "Filename of the test to generate."},
                            "params": {"type": "string", "description": "Command-line arguments for the generator."}},
                            "required": ["name", "params"]}}},
                "required": ["id", "idGenerator", "genExecution"]}},

        "defaultExtraTests": {"type": "array",
            "description": "List of specific test files to import.",
            "items": {"$ref": "#/definitions/fileDescr"}},

        "defaultSanitizer": {"description": "Sanitizer, tests whether an input file is a valid test. Will override automatic detection. Recommended only for advanced users.",
            "$ref": "#/definitions/compileAndRunParams"},

        "defaultChecker": {"description": "Checker, grades the solution's result. Will override automatic detection. Recommended only for advanced users.",
            "$ref": "#/definitions/compileAndRunParams"},

        "defaultSolutions": {"type": "array",
            "description": "List of solutions to grade. Will override automatic detection. Recommended only for advanced users.",
            "items": {"type": "object",
                "description": "Solution to be graded.",
                "properties": {
                    "id": {"type": "string", "description": "Name of the solution."},
                    "compilationDescr": {"$ref": "#/definitions/compilationDescr"},
                    "compilationExecution": {"$ref": "#/definitions/executionParams"}},
                "required": ["id", "compilationDescr", "compilationExecution"]}},

        "defaultExecutions": {"type": "array",
            "description": "List of solution executions. Will override automatic detection. Recommended only for advanced users.",
            "items": {"type": "object",
                "description": "Execution of a solution on one or multiple tests.",
                "properties": {
                    "id": {"type": "string", "description": "Name of the execution."},
                    "idSolution": {"type": "string", "description": "Name of the solution to grade."},
                    "filterTests": {
                        "type": "array",
                        "description": "List of globs filtering tests to input to the solution.",
                        "items": {
                            "type": "string",
                            "pattern": "^[^/]+$"}},
                    "noFeedbackTests": {
                        "type": "array",
                        "description": "List of globs filtering tests (selected with filterTests) whose outputs will be hidden.",
                        "items": {
                            "type": "string",
                            "pattern": "^[^/]+$"}},
                    "runExecution": {"$ref": "#/definitions/executionParams"}},
                "required": ["id", "idSolution", "filterTests", "runExecution"]}}}

}
